# .github/workflows/ci.yml
name: CI
on: [push]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
          # ansonsten werden freuhere commits nicht geholt .. die brauchts aber fuer den log
          fetch-depth: 0

    - name: git log since last tag
      id:   git_log
      run:  |
          content=$(git log --pretty=format:'- %h %s')
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=log::$content"

    - name: git commit message
      id: git_msg
      run: |
          content=$(git log -1 --pretty=format:'- %h %s')
          echo "::set-output name=msg::$content"

    - name: git branch
      id: git_branch
      run: |
          commit=$(git log -1 --pretty=format:'%h')
          git branch -a --contains $commit
          content=$(git branch -a --contains $commit |tail -1 | sed 's/remotes\/origin\///')
          echo "::set-output name=branch::$content"

    - name: install, build, and test
      run: |
        echo 'ok'
    - name: create ticket
      uses: JasonEtco/create-an-issue@v2
      id: create-issue
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: ${{ steps.git_branch.outputs.branch }}
          GITLOG: ${{ steps.git_log.outputs.log }}
          MESSAGE: ${{ steps.git_msg.outputs.msg }}
      with:
          filename: .github/ISSUE_TEMPLATE.md
    - name: share commit info
      id: set_message
      uses: noobly314/share-data@v1
      with:
        share-id: commit_message
        mode: set
        key: message
        value: ${{ steps.git_msg.outputs.msg }}

  wiki:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: get message
        id: get_message
        uses: noobly314/share-data@v1
        with:
          share-id: commit_message
          mode: get
          key: message
      - uses: actions/checkout@v2
        with:
          repository: ${{github.repository}}.wiki    # specify the wiki repo name here.
      - name: check wiki repo content
        run: |
          ls -al
      - name: edit wiki
        run: |
          sed -i.bak "s/^DATABOX\(.*\)/DATABOX: ${{ steps.get_message.outputs.data }}/" Home.md
      - name: Commit files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "update deployment info" Home.md
      - name: Push changes to wiki repo
        uses: ad-m/github-push-action@master
        with:
          repository: ${{github.repository}}.wiki    # specify the wiki repo and push the update.
          github_token: ${{ secrets.GITHUB_TOKEN }}
